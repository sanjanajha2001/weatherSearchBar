{"ast":null,"code":"var _jsxFileName = \"/home/sanjana/Desktop/weather-app/src/component/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { appId, apiKeyAlgolia, apiKey } from '../envorment';\nimport { Card } from '@material-ui/core';\nimport AlgoliaPlaces from 'algolia-places-react';\nimport CurrentWeatherComponent from \"./CurrenetWeather\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WeatherComponent() {\n  _s();\n\n  let [currentWeather, setCurrentWeather] = useState({\n    temp: '0',\n    feels_like: '0',\n    description: 'snowing',\n    icon: '50d',\n    name: 'India, IN',\n    lat: 18.4529,\n    lon: 73.8652\n  });\n  let [url, setUrl] = useState(`https://api.openweathermap.org/data/2.5/weather?lat=${currentWeather.lat}&lon=${currentWeather.lon}&appid=${apiKey}&units=metric`);\n  useEffect(() => {\n    const getWeather = async () => {\n      try {\n        let res = await fetch(url);\n        res = await res.json();\n        let {\n          description,\n          icon\n        } = res.weather[0];\n        let {\n          temp,\n          feels_like\n        } = res.main;\n        setCurrentWeather({\n          temp,\n          feels_like,\n          description,\n          icon,\n          name: `${res.name}, ${res.sys.country}`,\n          lat: res.coord.lat,\n          lon: res.coord.lon\n        });\n      } catch (error) {\n        alert(\"Error\", error);\n      }\n    };\n\n    getWeather();\n  }, [url]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"card\",\n    justify: \"center\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AlgoliaPlaces, {\n        placeholder: \"Write an address here\",\n        onChange: _ref => {\n          let {\n            suggestion\n          } = _ref;\n          return setUrl(`https://api.openweathermap.org/data/2.5/weather?lat=${suggestion.latlng.lat}&lon=${suggestion.latlng.lng}&appid=${apiKey}&units=metric`);\n        },\n        options: {\n          appId,\n          apiKey: apiKeyAlgolia,\n          aroundLatLngViaIP: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CurrentWeatherComponent, {\n        weather: currentWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n}\n\n_s(WeatherComponent, \"1TN4UAnoNjp5c2heP1XyhzRWbFI=\");\n\n_c = WeatherComponent;\nexport default WeatherComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherComponent\");","map":{"version":3,"sources":["/home/sanjana/Desktop/weather-app/src/component/Weather.js"],"names":["React","useEffect","useState","appId","apiKeyAlgolia","apiKey","Card","AlgoliaPlaces","CurrentWeatherComponent","WeatherComponent","currentWeather","setCurrentWeather","temp","feels_like","description","icon","name","lat","lon","url","setUrl","getWeather","res","fetch","json","weather","main","sys","country","coord","error","alert","suggestion","latlng","lng","aroundLatLngViaIP"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { appId, apiKeyAlgolia, apiKey } from '../envorment';\nimport { Card } from '@material-ui/core';\n\nimport AlgoliaPlaces from 'algolia-places-react';\nimport CurrentWeatherComponent from \"./CurrenetWeather\";\n\nfunction WeatherComponent() {\n\tlet [currentWeather, setCurrentWeather] = useState({\n\t\ttemp: '0',\n\t\tfeels_like: '0',\n\t\tdescription: 'snowing',\n\t\ticon: '50d',\n\t\tname: 'India, IN',\n\t\tlat: 18.4529,\n\t\tlon: 73.8652\n\t});\n\n\tlet [url, setUrl] = useState(`https://api.openweathermap.org/data/2.5/weather?lat=${currentWeather.lat}&lon=${currentWeather.lon}&appid=${apiKey}&units=metric`);\n\n\tuseEffect(() => {\n\t\tconst getWeather = async () => {\n\t\t\ttry {\n\t\t\t\tlet res = await fetch(url);\n\t\t\t\tres = await res.json();\n\t\t\t\tlet { description, icon } = res.weather[0];\n\t\t\t\tlet { temp, feels_like } = res.main;\n\t\t\t\tsetCurrentWeather({\n\t\t\t\t\ttemp,\n\t\t\t\t\tfeels_like,\n\t\t\t\t\tdescription,\n\t\t\t\t\ticon,\n\t\t\t\t\tname: `${res.name}, ${res.sys.country}`,\n\t\t\t\t\tlat: res.coord.lat,\n\t\t\t\t\tlon: res.coord.lon\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\talert(\"Error\", error)\n\t\t\t}\n\t\t};\n\t\tgetWeather();\n\t}, [url])\n\n\treturn (\n\t\t<Card\n\t\t\tclassName='card'\n\t\t\tjustify=\"center\"\n\t\t\talignItems=\"center\">\n\t\t\t<div >\n\t\t\t\t<AlgoliaPlaces\n\t\t\t\t\tplaceholder='Write an address here'\n\t\t\t\t\tonChange={({ suggestion }) => setUrl(`https://api.openweathermap.org/data/2.5/weather?lat=${suggestion.latlng.lat}&lon=${suggestion.latlng.lng}&appid=${apiKey}&units=metric`)}\n\t\t\t\t\toptions={{ appId, apiKey: apiKeyAlgolia, aroundLatLngViaIP: false }}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div >\n\t\t\t\t<CurrentWeatherComponent weather={currentWeather} />\n\t\t\t</div>\n\t\t</Card>\n\t);\n}\n\nexport default WeatherComponent;"]},"metadata":{},"sourceType":"module"}